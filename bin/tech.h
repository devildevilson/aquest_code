#ifndef TECH_H
#define TECH_H

#include <string>

// название, описание, иконка
// тех распротраняется по провинциям, нужно чтобы дошла до столицы, или нужно принимать тех за денюжку?
// если у нас есть тех то мы можем принять какие то законы
// тех распространяется по провинциям
// тех еще может чуть чуть усилить статы фракции на этой территории
// тех это очень простая конструкция (только данные + изменение аттрибута)

// гораздо сложнее концепция законов
// законы открываются по техам и чтобы их принять нужны какие то условия (например положительные мнения вассалов)
// законы напрямую изменяют некоторые механики (например механику наследования)
// законы влияют на сюзерена и вассалов (и потенциально на вассалов вассалов)
// большую роль в государстве должна играть объединенная сила вассалов
// которая обычно превращается в орган управления

namespace devils_engine {
  namespace core {
    struct tech {
      std::string name;
      std::string description;
      uint32_t icon;
      uint32_t attrib[8]; // изменения 8 (16?) аттрибутов
    };
  }
}

// связать все во едино довольно проблематично
// по идее нам можно пойти по двум путям:
// 1) определить в c++ минимальное количество классов и структур
// только для того чтобы все правильно и быстро нарисовать
// использовать луа для вообще всей логики (причем чем больше луа, тем быстрее луа)
// 2) определить несколько мест где можно применить луа 
// а остальное посчитать в с++
// проблема 1) в том, что я не могу быть уверенным будет ли это все под конец быстрым и
// маленьким в памяти
// проблема 2) в том что я слишком медленно буду делать игру
// как можно решить 1)? у меня есть ряд статичных структур в игре, 
// которым по сути нужно будет указать только размер дополнительных данных
// (например тайл - статические соседи, точки, центр и проч, а все остальное динамическое)
// таким образом мы можем возвращать все основные типы данных + указатель на хранилище

// вот что нужно сделать: определить основные (желательно как можно больше разных) типы данных в игре
// выдать им возможность доступа к хранилищу заранее определенного размера
// большинство (желательно все) взаимодейтсвий организовать в луа
// когда тогда должен запускаться луа скрипт? конкретные взаимодействия в игре будут происходить 
// во время выполнения скрипта поведения + есть несколько событий которые вызывают специальные луа скрипты
// (смерть правителя должна вызывать скрипт который по форме правления выберет нового персонажа)
// как то так, осталось продумать все структуры

// во время этого я придумал как должны выглядеть бои: это должны быть варгеймы на сгенерированных картах
// условный город дает несколько отрядов разных типов при призыве (как в цк), отряды определены и занимают один условный слот
// (как в тотал варе), при встрече отряд-отряд генерируется варгейм 
// (тайловая карта с большими тайлами, по обе стороны зоны где можно расставить войска, начало битвы войска сходятся и как то взаимодействуют, каждый отряд в своем тайле)
// осталось покрутить механики варгейма и неплохо было бы сделать авторезолв

// желательно отделить предсказание от самого хода
// предсказание мы можем запустить в разных потоках и примерно прикинуть что мы будем делать этот ход
// с другой стороны это не сильно будет работать в последовательных ходах
// ход нужно обработать у ~1500 персонажей + какое то количество героев (?)
// без войны то поди быстро будет (luajit?)

// тех - иногда дает бонусы, открывает постройку новых зданий, открывает возможность принимать некоторые законы,
// дает возможность распространяться некоторым другим техам, увеличивает цену за ресурс, что еще?
// как распространить? есть вариант еу4 - по очкам, распространяется после накопления определенного количества очков
// есть вариант цк2 - случайно по среднему времени, в какой то момент триггерится распространение, затем с каждым ходом шанс будет увеличиваться
// честно говоря второй вариант мне нравится больше

#endif
