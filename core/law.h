#ifndef LAW_H
#define LAW_H

#include "stats.h"
#include "declare_structures.h"
#include "utils/realm_mechanics.h"

namespace devils_engine {
  namespace core {
    // преположительно закон меняет сразу несколько механик, это хорошо с учетом того что 
    // у нас несколько бит занимает например отношение к однополой женитьбе, но плохо
    // в том что для остального делать эту структуру непрактично
    // не уверен что составные законы нужны, но стуктура с законами нужна для игрока
    // ко всему прочему законы могут изменить статы (в пользу составных законов)
    struct law {
      static const structure s_type = structure::law;
      static const size_t max_stat_modifiers_count = 16;
      static const size_t max_mechanics_modifiers_count = 16;
      
      std::string id;
      size_t name_id; // у некоторых сущностей имена должны быть определены заранее (ну то есть мы наверное можем сгенерировать закон, но пока нет)
      size_t description_id;
      std::array<stat_modifier, max_stat_modifiers_count> attrib;                        // закон тоже может изменить аттрибуты
      std::array<utils::mechanics_modifier, max_mechanics_modifiers_count> modificators; // применяем изменения к механикам государства (тут видимо нужно делать больше размер)
      //std::vector<utils::functions_container::operation> potential;
      //std::vector<utils::functions_container::operation> conditions;
      // но закон еще меняет механику, механика будет привязана к функции луа (не будет наверное)
      // источники говорят что феодализм существовал в китае рядом с чиновниками
      // и по умолчанию государство раздавало земли крестьянам и чиновникам,
      // скопив много земель богатые китайцы видимо превращались в феодалов,
      // тут у нас явно какой то закон о запрете наследования земли
      // скорее всего законы будут заданы здесь
      // есть ряд механик которые может делать игрок, например забирать титулы
      // нужно чтобы именно эти механики у игрока забирались и передавались некоему органу 
      // (совет, а если могущественный то парламент)
      // описал очень много механик связанных с законами
      // закон меняет механику лишь однажды, для того чтобы отменить закон нужно принять предыдущий закон
      // аттрибуты перевычисляются каждый ход (?) 
      
      law();
    };
  }
}

#endif
