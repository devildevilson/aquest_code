  // вот уже готов каркас карты
  // что требуется для конечной карты?
  // каждый тайл уникальный: текстурка земли и свойства,
  // какие то предметы на тайле (лес?), уникальный объект (ресурс в лесу),
  // высота тайла, флаги, id провинции, ???
  // density и object_id наверное можно засунуть в ground_data
  // тут нужно отталкиваться от того как я вообще пойму какой тайл какой
  // свойства тайлов должны генерится, значит я должен понять какие данные мне нужны чтобы правильно сгенерить ландшафт
  // во первых для хорошего ландшафта нужно правдоподобно сгенерить вода/не вода + какой то способ классифицировать
  // получившийся ландшафт, отталкиваясь от классификации ландшафта нам нужно задать много разных земель
  // самый неплохой способ классифицировать по некоторому числу которое обозначает условную среднюю температуру по широте
  // южный и северный полюс = 1, экватор = 0, размер настраиваемый. тут сразу вспоминается что на экваторе у нас стоит не
  // пустыня, а джунгли, прикол в том что пустыни по каким то причинам не работают например в южной америке
  // в южной америке по всей протяженности какие то леса, зато в африке чуть выше экватора огромная пустыня сахара
  // причем кажется что эта засуха простирается до пакистана (хотя там горы)
  // и вот что у нас есть: температура по широте, и высота тайла (горы)
  // + нужно сделать возможность случайно получить на карте какой то заметный паттерн (минмакс высота и широта + количество? (шанс появления?))
  // у биома может быть еще обязательное условие - это объем, как это учесть?
  // биом может содержать несколько типов земель
  // тут еще проблема, как сделать плавный переход от одной земли до другой
  // климат на нашей земле строится по климатическим поясам, а они в свою очередь разбиваются по температурам
  // но проблема в том что они неровные, сгенерить неровные климатические пояса несложно, нужно просто както
  // сгладить биомы, таким образом высота и температура могут примерно однозначно определить текущий биом в конкретном тайле
  // если температура это примерно угол между полюсом и экватором, то что такое высота?
  // высота нужна для того чтобы определить горы и низины, откуда она берется на земле?
  // стык геоплит (?) обычно приводит к горам. предполагается что геоплит этих не слишком много
  // как их сгенерить? кто то предлагает использовать фракталы

  // какой алгоритм? сначало нужно сгенерить высоты
  // мне не нравятся почти все алгоритмы так как они будут генерить очень неправдоподобную поверхность
  // ответ заключается в том что нужно взять несколько алгоритмов и как то их соеденить
  // я так понимаю нужно сначала сгенерить диаграму воронного (voronoi)
  // для случайный тайлов на сфере, эта диаграмма нужна для того чтобы отделить места на планете друг от друга
  // эти места затем заполняются водой случайным образом, хотя наверное лучше не водой
  // можно ли по этой диаграме сгенерить что то вроде тектонических плит? по идее да
  // нужна ли нам диаграма? диаграма может помочь сгенерить более сложные, но при этом не всратые края
  //

  // как сгенерировать диаграму вороного для сферы?
  // так, я скачал несколько программок для генерации карт
  // все опенсорс
  // суть в том что диаграмы воронного может быть вообще не потребуются
  // (или потребуются только для генерации провинций)
  // для генерации ландшафта потребуется рандомно заполнить некую область
  // такие области будут представлять собой тектонические плиты
  // производя манипуляции с плитами (возраст, их скорость и проч)
  // я получу высоты, с высотами можно сгенерировать температуры
  // и далее все остальное
  //

  // что с плитами? какое то очень определенное количество тектонических плит
  // нужно будет посмотреть разные числа от 10 до 50 (может меньше)
  // как их заполнять? генерю точки от 10 до 50
  // добавляю их в очередь, забираю из очереди, добавляю тайл к плите

  // часть вычислений нужно вытащить в луа
  // эту часть должен иметь возможность модифицировать игрок
  // какую часть не нужно вытаскивать в луа?
  // 1) та где важна скорость (создание гексов 100%)
  // 2) где переменных мало и изменение алгоритма не имеет смысла (генерация тектоники?)
  // 3) генерация технических вещей (цвета, какие то объекты на тайле)
  // что важно оставить в луа?
  // 1) генерацию основных основных погодных переменных (температура, влажность + пользовательские переменные)
  // 2) генерация биомов на основе данных (это понятно)
  // пригодятся еще пользовательские переменные которые будут изменяться при создании карты
  // это все без учета генерации провинций

  // генерировать провинции нужно будет как то распределив население
  // скорее всего нужно будет сгенерить более менее убедительную,
  // но очень схематичную историю
  // выглядеть это должно примерно так:
  // создать точку зарождения цивилизации
  // из этой точки население разбрелось в разные стороны
  // люди не задерживались в местах типо пустынь (или точнее задерживались но очень давно)
  // оседали в местах с благоприятным климатом,
  // причем в некоторых местах с благоприятным климатом цивилизация могла не сложиться
  // в некоторых местах с благоприятным климатом сложилась даже очень
  // не понятно как им пройти через океан, с другой стороны можно сделать веса для океана
  // такие чтобы после перехода людей осталось бы очень мало
  // много раз проитерировать
  // мы либо берем один раз большое число и по нему сразу стараемся
  // сгенерить всех людей, либо несколько раз пытаемся проделать алгоритм
  // первое проще по вычислениям, второе по идее как в реальности это происходило
  // (хотя может и нет), у нас еще население изменялось в зависимости от
  // уровня жизни на конкретных территориях

  // где то после этого нужно распределить провинции по суше
  // как это сделать? я думал тут использовать диаграму вороного
  // но мне для нее уже нужно получить какие то точки, возможно стоит
  // использовать опять алгоритм случайного заполнения с весами
  // есть некое число, при заполнении очередного тайла мы вычитаем из этого числа,
  // если число становится < 0, то заканчиваем делать провинцию

  // после этого нужно сгенерить культуры, тоже для каждого тайла? или по провинциям?
  // культуры вообще возможно нужно будет создать после стран

  // и наконец религии, несколько религиозных центров в местах скопления людей
  // рапространяем их, примерно как и людей, наверное нужно как то по слоям это делать
  // то есть более молодые религии замещают более старшие
  // у людей должны остаться традиционные верования

  // после того как сгенерили религию, традиции, провинции нужно сгенерить страны
  // страны генерятся по провинциям, но при этом они же имееют
  // самую сильную зависимость от истории, как правильно сгенерировать страны?
  // самым более менее правильным вариантом будет конечно пройти весь путь от зарождения государства
  // до определенного момента, для упрощения наверное можно сгенерировать
  // несколько этапов по империям, создать империю -> развалить на множество государств ->
  // снова создать, и так несколько раз, к сожалению это не всегда работает
  // а только для мест большого скопления людей, остальные места нужно заполнять как то иначе
  // с другой стороны остальные места более традиционно развивались
  // вот что можно сделать: в истории существовали крупные империи, которые создавались
  // на удивление округлыми, империи разваливались дробясь на огромное количество государств
  // затем собирались вновь, разваливались империи чаще всего по культурным и религиозным границам
  // я могу сделать помимо обычных империй еще псевдоимперии, которые действовали примерно по тому же
  // сценарию, и просто означали большое количество взаимодействий на данной территории
  // псевдоимперии отличаются от обычных степенью взаимодействия внутри нее
  // вообще на империи могут повлиять религии вплоть до разрушения
  // думаю что вообще вот как нужно сделать: (была ли в истории точка,)
  // (когда каждая провинция принадлежала уникальному государству?)
  // итерировать случайные взаимодействия между странами + возникновения религии
  // у каждой страны есть условный уровень корозии (упадка), после которого она разваливается
  // случайные взаимодействия: дружба, вражда, дружба переростает в унию, вражда - захват територии
  // к уровню корозии должен быть уровень удачи, который будет давать одним государствам преимущества
  // перед другими, высокий уровень удачи должен приводить к большим империям,
  // но не должен быть бесконечным, ну и провинции провинциям рознь, какие то провинции должны
  // хорошо распространять религии или быть желаемым куском,
  // можно ли таким образом что-то полезное создать? наверное

  // генерация гексагональной сферы (поворот)
  // генерация тектоники и тектонических данных (количество, уровень воды, ???)
  // генерация высот ()
  // генерация рек (???)
  // генерация воздушных потоков (может быть какой нибудь коэффициент)
  // генерация температур ()
  // генерация влажности ()
  // генерации дополнительных параметров ()
  // генерация биомов ()
  // генерация людей (несколько рас?, плотность?)
  // генерация провинций (количество)
  // генерация стран + религий (длительность истории)
  // генерация культур ()
  // как то так
  // где сгенерировать уникальные природные явления? биомы?
  //

  // нужно придумать способ передавать данные
  // такой, чтобы я передавал всегда только несколько определенных таблиц
  // я забыл что луа не работает в мультитрединге
  // луа использует один стак для всех функций, поэтому
  // он ломается уогда вычисления происходят в нескольких потоках
  // это нас подводит к тому что придется использовать
  // несколько луа стейтов
  // все это конечно сильно усложняет использование луа
  // самое главное как

  // основная задача: сделать так чтобы вся эта генерация занимала как можно меньше времени
  // с учетом того что нужно сгенерировать данные для 2млн тайлов
  // для этого конечно же нужно использовать мультитрединг
  // как можно сделать мультитрединг и при этом вызывать функции из луа?
  // хороший вопрос, первонаперво нужно пользоваться стандарными средствами выдачи результата
  // то есть входные данные в функцию должны быть строго рид онли
  // выходные данные должны возвращаться строго через return
  // в конечном итоге мне нужно заполнить некую структуру
  // причем это может быть вполне lua структура
  // тип у некоторых вещей нужно определить в json
  // я практически всегда знаю размер данных для заполнения, их тип, их индекс строго определен
  // проблемы возникнут когда нужно будет собирать последние данные (а может и нет)
  // мы должны по идее использовать луа обдж

  // кое как сделал build_tectonic_plates
  // теперь нужно придумать как правильно сделать все остальные генерации
  // нужно как то запомнить произвольные данные
  // я думал добавить sol::table, но нужно как то копировать данные из таблиц в таблицы
  //

  // непрошибаемые проблемы у луа с мультитредингом внутри скрипта
  // большинство вещей работает только с ограниченным набором возможностей
  // где то не работает в принципе юзердата, где то не передаются функции
  // в другой поток, где то нужно писать специальный модуль для луа чтобы
  // юзердата заработала, ничего из этого не работает как надо
  // какие варианты у меня остались? использовать с++ треды с несколькими
  // сол стейтами с четко определенными данными
  // задача в основном заключается в том чтобы посчитать одни данные
  // (несколько переменных на каждый тайл/плиту/провинцию)
  // и из них посчитать другие данные (то несколько переменных)
  // определить все это через json или еще что крайне сложно
  // видимо придется либо все делать в с++
  // либо очень ограниченно пользоваться луа
  // как мне может помочь луа? я там определяю все функции
  // и немного могу их подкорректировать и все
  // придумать какую нибудь функцию инициализации?
  // данные по каждому тайлу/ребру/плите/провинции (размер конечных данных)
  // из функций я должен получать не только сами данные, но и оффсет

  // лучше наверное все же весь код сначало написать на с++ в таком случае
  // возможно он еще и не будет быстро работать и тогда вообще что-то
  // другое нужно будет придумать
