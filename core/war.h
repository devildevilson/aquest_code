#ifndef WAR_H
#define WAR_H

#include <cstddef>
#include <cstdint>
#include <vector>
#include "declare_structures.h"
#include "utils/structures_utils.h"
#include "utils/handle.h"
#include "script/get_scope_commands_macro.h"

// война, тут прежде всего нужно указать из-за чего война,
// кто стартанул и против кого воюем, клаймат, участников
// титулы которые мы получим
// что то еще? то как идет война указывается в казус белли
// где указывать войны? в реалме, нужно выполнять проверки
// на то сохранился ли альянс между участниками 
// и могут ли они продолжать конкретную войну

namespace devils_engine {
  namespace core {
    // какое время жизни у этой структуры? в конце войны удаляем структуру после вызова эвентов?
    // структуру создаем в эффектах, основной страх заключается в том что появится возможность на спавнить кучу войн без контрольно
    // когда удалять? война окончена + если война стала невалидной 
    struct war : public utils::flags_container, public utils::events_container {
      static const core::structure s_type = core::structure::war;
      
      size_t object_token;
      const casus_belli* cb; // можно ли создать казус белли по ходу игры? вряд ли
      // если персонаж умирает то при элективном государстве война продолжается?
      // состояние войны зависит от наличия клейма, возможно нужно сделать вот как:
      // клейм может быть слабым - он не передается никому далее, сильный клейм - передается по наследству по династии,
      // и гос клейм - передается следующему преемнику государства (например в республиках следующему избранному правителю)
      // клейм может быть как гос так и сильным (то есть передается либо одному либо другому), после передачи нужно ли менять тип?
      // наследник может не унаследовать верхний титул, и тогда фактически наследника два: династический и государственный
      // династическому отходит сильный клейм, госу отходит отойти гос клейм, а клейм который и тот и тот? отойдет и одному и второму?
      // не, вряд ли, наверное приоритет нужно отдать госклейму, есть госнаследник != наследнику то передаем ему клейм (и оставляем тип только госклейм)
      // в ином случае передаем как есть наследнику
      character* war_opener;
      character* target_character;
      // реалмы указывать здесь особого смысла нет, все реалмы у которых лидер этот персонаж участвуют в войне
//       utils::handle<realm> opener_realm;
//       utils::handle<realm> target_realm;
      // может ли быть государственный клейм? скорее да
      // нет, госклейма быть не должно, клеймы должны существовать только у персонажей
      //utils::handle<realm> claimat;
      character* claimant;
      // титулов может быть много, а вот челиков на войне не очень (нет титулов тоже не очень много)
      // для челиков наверное можно сделать array
      std::vector<titulus*> target_titles;
//       std::vector<utils::handle<realm>> attackers;
//       std::vector<utils::handle<realm>> defenders;
      std::vector<character*> attackers;
      std::vector<character*> defenders;
      
      // естественно конец и начало войны вызывают какие то скрипты
      // также война может быть таргетом в скрипте
      
      // возможно тут еще нужно указать какие то конкретные вещи из казус белли
      // казус белли - это по сути тип войны, возможно при старте войны какие нибудь модификаторы нужно будет подкорректировать
      
      war();
      ~war();
      
#define GET_SCOPE_COMMAND_FUNC(name, a, b, type) type get_##name() const;
      WAR_GET_SCOPE_COMMANDS_LIST
#undef GET_SCOPE_COMMAND_FUNC
    };
  }
}

#endif
